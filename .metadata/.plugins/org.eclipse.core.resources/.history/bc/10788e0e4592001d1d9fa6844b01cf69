package chapter04;

// Thread 클래스를 상속받아서 Thread 만드는 방법
class Thread1 extends Thread {
	// run을 Override해서 작업할 내용을 구현
	public void run() {
		for (int i = 0; i < 20; i++) {
			System.out.print("*");
			for (int j = 0; j < 100000; j++) {}
		}
	}
}

// Runnable 인터페이스를 구현해서 Thread 만드는 방법
class Thread2 implements Runnable {
	// Runnable 인터페이스의 추상메서드 run()을 구현
	@Override
	public void run() {
		for (int i = 0; i < 20; i++) {
			System.out.print("#");
			for (int j = 0; j < 100000; j++) {}
		} 
	}
}

class CountDown extends Thread {
	public void run() {
		// Thread.sleep()는 지정한 시간동안
		// 해당 스레드를 Blocked 상태로 만듦
		
	}
}

public class Example06 {
	public static void main(String[] args) {
		Thread1 thread1 = new Thread1();
		// Runnable 인터페이스를 구현한 클래스의 경우
		// Thread 클래스의 생성자의 인자로 담아서
		// Thread 인스턴스를 생성한 후 사용가능
		Thread2 thread2 = new Thread2();
		Thread thread = new Thread(thread2);
		
		// Tread 클래스의 setPriority 메서드로 우선순위를 지정
		// 우선순위를 지정하지 않으면 기본 값으로 5
		thread1.setPriority(1);
		thread.setPriority(9);
		
		// 상속 받은 Thread 클래스의 start() 메서드로 해당 Thread를 실행
		thread1.start();
		thread.start();
		
		for (int i = 0; i < 20; i++)  {
			System.out.print("@");
			for (int j = 0; j < 100000; j++) {}
		} 
	}
}





